/* Базовые селекторы */
p {}                      /* Действие: выбирает все элементы <p> */
.class {}                 /* Действие: выбирает элементы с class="class" */
#id {}                    /* Действие: выбирает элемент с id="id" */
* {}                      /* Действие: выбирает все элементы */

/* Комбинаторы */
div p {}                  /* Действие: выбирает все <p> внутри <div> */
div > p {}                /* Действие: выбирает <p>, которые являются прямыми потомками <div> */
div + p {}                /* Действие: выбирает <p>, которые идут сразу после <div> */
div ~ p {}                /* Действие: выбирает все <p>, которые следуют после <div> */

/* Атрибутные селекторы */
[title] {}                /* Действие: выбирает элементы с атрибутом title */
[href="..."] {}           /* Действие: выбирает элементы с точным значением атрибута */
[class^="btn"] {}         /* Действие: выбирает элементы, у которых class начинается с "btn" */
[class$="-primary"] {}    /* Действие: выбирает элементы, у которых class заканчивается на "-primary" */
[class*="error"] {}       /* Действие: выбирает элементы, у которых class содержит "error" */


/* Псевдоклассы состояний */
a:hover {}                /* Действие: стили при наведении курсора */
input:focus {}            /* Действие: стили для элемента в фокусе */
button:active {}          /* Действие: стили при активации элемента */
input:checked {}          /* Действие: стили для отмеченных checkbox/radio */
input:disabled {}         /* Действие: стили для отключенных элементов */
li:first-child {}         /* Действие: выбирает первый дочерний элемент */
li:last-child {}          /* Действие: выбирает последний дочерний элемент */
li:nth-child(2n) {}       /* Действие: выбирает чётные элементы (2,4,6...) */

/* Псевдоэлементы */
p::first-line {}          /* Действие: стили для первой строки текста */
p::first-letter {}        /* Действие: стили для первой буквы текста */
div::before {             
  content: "→ ";          /* Действие: добавляет контент перед элементом */
}
div::after {
  content: " ←";          /* Действие: добавляет контент после элемента */
}

/* Текст */
font-family: Arial, sans-serif; /* Действие: задаёт шрифт */
font-size: 16px;               /* Действие: размер шрифта */
font-weight: bold;             /* Действие: жирность шрифта */
color: #333;                   /* Действие: цвет текста */
text-align: center;            /* Действие: выравнивание текста */
line-height: 1.5;              /* Действие: межстрочный интервал */
text-decoration: none;         /* Действие: убирает подчёркивание у ссылок */

/* Фон */
background-color: #f5f5f5;     /* Действие: цвет фона */
background-image: url(...);    /* Действие: фоновое изображение */
background-size: cover;        /* Действие: масштабирует фон */
background-position: center;   /* Действие: позиционирует фон */
background-repeat: no-repeat;  /* Действие: запрещает повторение фона */

/* Блоки */
width: 100%;                  /* Действие: ширина элемента */
height: 200px;                /* Действие: высота элемента */
margin: 10px;                 /* Действие: внешние отступы */
padding: 15px;                /* Действие: внутренние отступы */
border: 1px solid #ddd;       /* Действие: рамка вокруг элемента */
border-radius: 5px;           /* Действие: скругление углов */
box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Действие: тень блока */

.container {
  display: flex;              /* Действие: включает flex-контейнер */
  flex-direction: row;        /* Действие: направление элементов (row|column|row-reverse|column-reverse) */
  flex-wrap: wrap;            /* Действие: перенос элементов на новую строку */
  justify-content: center;    /* Действие: выравнивание по главной оси (flex-start|flex-end|center|space-between|space-around) */
  align-items: center;        /* Действие: выравнивание по поперечной оси (flex-start|flex-end|center|stretch|baseline) */
  gap: 10px;                  /* Действие: расстояние между элементами */
}

.item {
  flex: 1;                    /* Действие: пропорциональное распределение пространства */
  order: 2;                   /* Действие: меняет порядок отображения элемента */
  align-self: flex-start;      /* Действие: индивидуальное выравнивание элемента */
}


.container {
  display: grid;                              /* Действие: включает grid-контейнер */
  grid-template-columns: 1fr 1fr 1fr;         /* Действие: определяет колонки (можно px, %, fr, repeat(3, 1fr)) */
  grid-template-rows: 100px auto;             /* Действие: определяет строки */
  gap: 20px;                                  /* Действие: расстояние между элементами */
  grid-template-areas:                        /* Действие: именованные области */
    "header header header"
    "sidebar main main";
}

.item {
  grid-column: 1 / 3;                         /* Действие: элемент занимает с 1 по 3 линию */
  grid-row: 1;                                /* Действие: элемент в первой строке */
  grid-area: header;                          /* Действие: элемент в области "header" */
}

position: static;            /* Действие: обычное положение (по умолчанию) */
position: relative;           /* Действие: позиционирование относительно обычного положения */
position: absolute;           /* Действие: позиционирование относительно ближайшего позиционированного предка */
position: fixed;              /* Действие: позиционирование относительно viewport (видимой области) */
position: sticky;             /* Действие: "липкое" позиционирование */

top: 10px;                   /* Действие: отступ сверху (работает с position ≠ static) */
left: 20px;                  /* Действие: отступ слева */
z-index: 100;                /* Действие: определяет порядок наложения элементов */

/* Transition */
button {
  transition: all 0.3s ease; /* Действие: плавное изменение свойств (свойство, время, функция-тайминг) */
}

/* Keyframe анимация */
@keyframes slideIn {
  from { transform: translateX(-100%); }
  to { transform: translateX(0); }
}

.element {
  animation: slideIn 0.5s ease forwards; /* Действие: применяет анимацию (имя, время, функция-тайминг, fill-mode) */
  animation-delay: 0.2s;                /* Действие: задержка перед началом */
  animation-iteration-count: 3;         /* Действие: количество повторений */
}


/* Медиа-запросы */
@media (max-width: 768px) {   /* Действие: стили для экранов ≤ 768px */
  .menu { display: none; }
  .mobile-menu { display: block; }
}

@media (min-width: 769px) and (max-width: 1024px) { /* Действие: стили для экранов 769-1024px */
  .container { width: 90%; }
}

/* Относительные единицы */
width: 100vw;                /* Действие: 100% ширины viewport */
height: 100vh;               /* Действие: 100% высоты viewport */
font-size: 2rem;             /* Действие: размер относительно корневого элемента */
padding: 2em;                /* Действие: отступ относительно размера шрифта элемента */

:root {
  --primary-color: #3498db;   /* Действие: объявляет глобальную CSS-переменную */
  --spacing: 8px;
}

.element {
  color: var(--primary-color); /* Действие: использует переменную */
  margin: var(--spacing);
  background-color: var(--secondary-color, #f1c40f); /* Действие: с fallback значением */
}

Полезные трюки

/* Центрирование элемента */
.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Полноэкранный блок */
.fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
}

/* Скрытие элемента */
.hidden {
  display: none;           /* Действие: полностью удаляет из потока */
  visibility: hidden;      /* Действие: скрывает, но сохраняет место */
  opacity: 0;              /* Действие: делает прозрачным, сохраняя место */
}

/* Обрезка длинного текста */
.truncate {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Сброс стилей кнопки */
.reset-button {
  background: none;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
}